#!/bin/bash

set -e

git_update="true"
git_status=""
mvn=""
mvn_install=""
mvn_update=""
init=""
exclude=""
include=""
git_fetch="true"
only_master=""
jump=""
while getopts "abce:fgi:j:mnprstu" OPT;
do
	case $OPT in
		a)
			echo Initializing .pommit_projs
			find . -type d -maxdepth 1 -mindepth 1 -exec echo 'PROJS="$PROJS {}"' ';' \
				| sed -e s_\./__ \
				| tee .pommit_projs
			echo done
			exit 0
			;;
		e)
			pro=`echo $OPTARG | sed -e 's_/$__'`
			exclude="$exclude $pro"
			;;
		i)
			pro=`echo $OPTARG | sed -e 's_/$__'`
			include="$include $pro "
			;;
		b)
			mvn="mvn"
			mvn_install="install"
			;;
		c)
			mvn="mvn"
			mvn_clean="clean"
			;;
		u)
			mvn_update="-U"
			;;
		g)
			git_update="git pull --rebase"
			;;
		f)
			git_fetch="git fetch --quiet"
			;;
		s)
			git_status="git status --short --branch"
			;;
		t)
			git_status="git stash list"
			;;
		p)
			git_update="git push"
			;;
		r)
			git_status="git branch -vv"
			;;
		m)
			only_master="true"
			;;
		n)
			git_update="git rebase origin/master"
			;;	
		j)
			jump=`echo $OPTARG | sed -e 's_/$__'`
			;;
	esac
done

if [[ -f .pommit_projs ]];
then
	. .pommit_projs
else
	echo "Not initialized."
	exit 1
fi

if [[ ! -z "$git_status" ]];
then
	for pro in $PROJS;
	do
		if [[ $exclude == *"$pro"* ]];
		then
			echo $pro excluded
			continue
		fi
		if [[ ! -z "$include" && $include != *" $pro "* ]];
		then
			echo $pro not included
			continue
		fi
		
		if [[ ! -z "$jump" ]];
		then 
			if [[ "$jump" != *"$pro"* ]];
			then
				echo Skipping $pro
				continue
			fi
			jump=""
		fi
		(cd $pro && pwd && $git_fetch && $git_status && echo -e "")
	done
	exit 1
fi

for pro in $PROJS;
do
	if [[ $exclude == *"$pro"* ]];
	then
		echo $pro excluded
		continue
	fi
	if [[ ! -z "$include" && $include != *" $pro "* ]];
	then
		echo $pro not included
		continue
	fi

	if [[ ! -z "$jump" ]];
	then 
		if [[ "$jump" != *"$pro"* ]];
		then
			echo Skipping $pro
			continue
		fi
		jump=""
	fi

	pushd $pro
	if [[ ! -z "$git_update" ]];
	then
		if [[ ! -z "$only_master" ]];
		then
			if [[ `git status -bs` == *"## master"* ]];
			then
				$git_update
			else
				echo "Not in master, skipping"
			fi
		else
			$git_update
		fi
	fi
	if [[ ! -z "$mvn" ]];
	then
		if [[ -f "pom.xml" ]];
		then
			$mvn $mvn_clean $mvn_install $mvn_update
		fi
	fi
	popd
done
